@import '~@material/button/_mixins.scss';


@import '@material/ripple/common';
@import '@material/ripple/mixins';

@mixin mdc-build-button($colors) {
  .mdc-button {
    @include mdc-button-base_;
    @include mdc-button-corner-radius(2px);
    @include mdc-button-container-fill-color(transparent);

    .mdc-button__icon {
      @include mdc-button__icon_;
    }
  
    svg.mdc-button__icon {
      @include mdc-button__icon-svg_;
    }
  }
  
  .mdc-button--raised,
  .mdc-button--unelevated,
  .mdc-button--outlined {
    .mdc-button__icon {
      @include mdc-button__icon-contained_;
    }
  }
  
  .mdc-button--raised,
  .mdc-button--unelevated {
    @include mdc-button--filled_;
  }
  
  .mdc-button--raised {
    @include mdc-button--raised_;
  }
  
  .mdc-button--outlined {
    @include mdc-button--outlined_;
    @include mdc-button-outline-width(2px);
  }
  
  .mdc-button--dense {
    @include mdc-button--dense_;
  }

  .mdc-button--expand {
    width: 100%;
  }

  @each $name, $theme in $colors {
    $cls: 'mdc-button--#{$name}';
    @if map-get($theme, 'index') == true {
      $themeName: null;
      $cls: 'mdc-button'
    }
  
    $color: map-get($theme, 'color');
    $onColor: map-get($theme, 'on-color');
  
    .#{$cls} {
      @include mdc-button-ink-color($color);
      @include mdc-states($color);
    }
  
    .#{$cls}.mdc-button--raised,
    .#{$cls}.mdc-button--unelevated {
      @include mdc-button-container-fill-color($color);
      @include mdc-button-ink-color($onColor);
      @include mdc-states($onColor);
    }
  
    .mdc-button--outlined {
      @include mdc-button-outline-color($color);
    }
  }
}
